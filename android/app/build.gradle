apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInReleaseBuilds') ?: false).toBoolean()
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
    compileSdkVersion 35
    buildToolsVersion "35.0.0"
    ndkVersion "27.1.12297006"

    namespace 'com.ranjeet1620.crmnativeexpo'

    defaultConfig {
        applicationId 'com.ranjeet1620.crmnativeexpo'
        minSdkVersion 24
        targetSdkVersion 35
        versionCode 2
        versionName "1.0.1"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            crunchPngs true
        }
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)
        }
    }

    androidResources {
        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'
    }
}

react {
    entryFile = file("../../index.js")
    reactNativeDir = file("../../node_modules/react-native")
    codegenDir = file("../../node_modules/@react-native/codegen")
    cliFile = file("../../node_modules/@expo/cli/build/index.js")
    hermesCommand = "../../node_modules/react-native/sdks/hermesc/windows-bin/hermesc.exe"
    enableBundleCompression = false
    bundleCommand = "bundle"
    bundleConfig = file("../../metro.config.js")
    autolinkLibrariesWithApp()
}



dependencies {
    implementation("com.facebook.react:react-android")

    def isGifEnabled = (findProperty('expo.gif.enabled') ?: "") == "true"
    def isWebpEnabled = (findProperty('expo.webp.enabled') ?: "") == "true"
    def isWebpAnimatedEnabled = (findProperty('expo.webp.animated.enabled') ?: "") == "true"

    if (isGifEnabled) {
        implementation("com.facebook.fresco:animated-gif:3.0.0")
    }

    if (isWebpEnabled) {
        implementation("com.facebook.fresco:webpsupport:3.0.0")
        if (isWebpAnimatedEnabled) {
            implementation("com.facebook.fresco:animated-webp:3.0.0")
        }
    }

    def hermesEnabled = (findProperty('expo.jsEngine') ?: "jsc") == "hermes"
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply plugin: 'com.google.gms.google-services'